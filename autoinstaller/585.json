{
    "./app/Http/Controllers/Admin/BagoulicenseController.php": [
      {
        "type": "newfile",
        "theme": "any",
        "add": "<?php\n/**\n * Pterodactyl - Panel\n * Copyright (c) 2015 - 2017 Dane Everitt <dane@daneeveritt.com>.\n *\n * This software is licensed under the terms of the MIT license.\n * https://opensource.org/licenses/MIT\n */\n\nnamespace Pterodactyl\\Http\\Controllers\\Admin\\Cloud;\n\nuse Javascript;\nuse Illuminate\\View\\View;\nuse Pterodactyl\\Models\\Egg;\nuse Pterodactyl\\Models\\Server;\nuse Pterodactyl\\Models\\Node;\nuse Pterodactyl\\Models\\Bagoulicense;\nuse Illuminate\\Support\\Facades\\Http;\n\nuse Pterodactyl\\Models\\Setting;\nuse Illuminate\\Http\\RedirectResponse;\nuse Prologue\\Alerts\\AlertsMessageBag;\nuse Pterodactyl\\Http\\Controllers\\Controller;\nuse Pterodactyl\\Services\\Eggs\\EggUpdateService;\nuse Pterodactyl\\Services\\Eggs\\EggCreationService;\nuse Pterodactyl\\Services\\Eggs\\EggDeletionService;\nuse Pterodactyl\\Http\\Requests\\Admin\\Egg\\EggFormRequest;\nuse Pterodactyl\\Contracts\\Repository\\EggRepositoryInterface;\nuse Pterodactyl\\Contracts\\Repository\\NestRepositoryInterface;\nuse Illuminate\\Http\\Request;\n\nclass CloudController extends Controller\n{\n    protected $alert;\n\n    protected $creationService;\n\n    protected $deletionService;\n\n    protected $nestRepository;\n\n    protected $repository;\n\n    protected $updateService;\n\n    public function __construct(\n        AlertsMessageBag $alert,\n        EggCreationService $creationService,\n        EggDeletionService $deletionService,\n        EggRepositoryInterface $repository,\n        EggUpdateService $updateService,\n        NestRepositoryInterface $nestRepository\n    ) {\n        $this->alert = $alert;\n        $this->creationService = $creationService;\n        $this->deletionService = $deletionService;\n        $this->nestRepository = $nestRepository;\n        $this->repository = $repository;\n        $this->updateService = $updateService;\n    }\n\n    /**\n     * Handle a request to display the Cloud servers page.\n     *\n     * @throws \\Pterodactyl\\Exceptions\\Repository\\RecordNotFoundException\n     */\n    public function index()\n    {\n        $eggs = Egg::get();\n        $cloudservers = Server::where('cloud', true)->get();\n        $cloudnodes = Node::where('cloud', true)->get();\n        $nodeselection = Setting::where('key', 'cloud_nodeselect')->first();\n        $transaction = Bagoulicense::where('addon', 'cloudservers')->firstOrFail()->license;\n        $license = Http::get(\"https://apipm.bagou450.com/checklicense?id=$transaction&name=cloudservers\");\n        $code = $license->status();\n        $license = $license->object();\n        if($license->message == 'Its not the good addon') {\n            $this->alert->danger('Its not the good addon')->flash();\n            return redirect()->route('admin.bagoulicense.license', 'cloudservers');\n        } else if($license->message == 'Too many license usage please contact me on discord') {\n            $this->alert->danger('License are already used on too many panel please contact me on discord')->flash();\n            return redirect()->route('admin.bagoulicense.license', 'cloudservers');\n        } else if ($code !== 200) {\n            $this->alert->danger('Error with the license key')->flash();\n            return redirect()->route('admin.bagoulicense.license', 'cloudservers');\n        } else {\n            if(!$nodeselection) {\n                $nodeselection = 'false';\n            } else {\n                $nodeselection = $nodeselection['value'];\n            }\n            return view('admin.cloud.index', ['eggs' => $eggs, 'cloudservers' => $cloudservers, 'cloudnodes' => $cloudnodes, 'nodeselection' => $nodeselection]);\n        }\n        \n    }\n\n      /**\n     * Handle a request to display the Egg creation page.\n     *\n     * @throws \\Pterodactyl\\Exceptions\\Repository\\RecordNotFoundException\n     */\n    public function savesettings(Request $request, Server $server)\n    {\n        $transaction = Bagoulicense::where('addon', 'cloudservers')->firstOrFail()->license;\n        $license = Http::get(\"https://apipm.bagou450.com/checklicense?id=$transaction&name=cloudservers\");;\n        $code = $license->status();\n        $license =  $license->object();\n        if($license->message == 'Its not the good addon') {\n            $this->alert->danger('Its not the good addon')->flash();\n            return redirect()->route('admin.bagoulicense.license', 'cloudservers');\n        } else if($license->message == 'Too many license usage please contact me on discord') {\n            $this->alert->danger('License are already used on too many panel please contact me on discord')->flash();\n            return redirect()->route('admin.bagoulicense.license', 'cloudservers');\n        } else if ($code !== 200) {\n            $this->alert->danger('Error with the license key')->flash();\n            return redirect()->route('admin.bagoulicense.license', 'cloudservers');\n        } else {\n        $eggs = Egg::get();\n        $cloudservers = Server::where('cloud', true)->get();\n        if(!$request->add_eggs) {\n            $this->alert->danger(\n                'You need to have a least of one egg'\n            )->flash();\n            return view('admin.cloud.index', ['eggs' => $eggs, 'cloudservers' => $cloudservers,]);\n        }\n        Egg::where('cloud', true)->update(['cloud' => false]);\n        foreach($request->add_eggs as $egg) {\n            Egg::where('id', $egg)->update(['cloud' => true]);\n        }\n        $eggs = Egg::get();\n        if(Setting::where('key', 'cloud_nodeselect')->exists()) {\n            Setting::where('key', 'cloud_nodeselect')->update(['value' => $request->nodeselection]);\n        } else {\n            $setting = new Setting;\n            $setting->key = 'cloud_nodeselect';\n            $setting->value = $request->nodeselection;\n            $setting->save();\n        }\n        $cloudnodes = Node::where('cloud', true)->get();\n\n        $this->alert->success(trans('Settings updated sucessfully'))->flash();\n        return view('admin.cloud.index', ['eggs' => $eggs, 'cloudservers' => $cloudservers, 'cloudnodes' => $cloudnodes, 'nodeselection' => $request->nodeselection]);\n    }\n    }\n}\n"    }
    ]
  }